{"version":3,"sources":["components/FeedbackOptions/styles.module.css","components/FeedbackOptions/index.jsx","components/Statistics/index.jsx","components/Section/index.jsx","components/Notification/index.jsx","components/FeedbackCounter/index.jsx","App.jsx","index.js","components/Section/styles.module.css"],"names":["module","exports","Buttons","onLeaveFeedback","options","map","key","className","styles","btn","name","onClick","shortid","Values","good","neutral","bad","total","positivePercentage","statWrapper","stat","statValue","Container","title","children","section","container","Notification","message","FeedbackCounter","useState","state","setState","keysForBtns","Object","keys","countTotalFeedback","count","values","Section","FeedbackOptions","target","prevState","Statistics","Math","round","countPositiveFeedbackPercentage","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oJACAA,EAAOC,QAAU,CAAC,IAAM,oBAAoB,OAAS,yB,0JCuBtCC,EApBC,SAAC,GAAD,IAAGC,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,QAApB,OACd,mCACGA,EAAQC,KAAI,SAAAC,GAAG,OACd,wBAEEC,UAAWC,IAAOC,IAClBC,KAAMJ,EACNK,QAASR,EAJX,SAMGG,GALIM,a,gBCgBEC,EAtBA,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACb,sBAAKX,UAAWC,IAAOW,YAAvB,UACE,oBAAGZ,UAAWC,IAAOY,KAArB,mBACQ,sBAAMb,UAAWC,IAAOa,UAAxB,SAAoCP,OAE5C,oBAAGP,UAAWC,IAAOY,KAArB,sBACW,sBAAMb,UAAWC,IAAOa,UAAxB,SAAoCN,OAE/C,oBAAGR,UAAWC,IAAOY,KAArB,kBACO,sBAAMb,UAAWC,IAAOa,UAAxB,SAAoCL,OAE3C,oBAAGT,UAAWC,IAAOY,KAArB,mBAEE,sBAAMb,UAAWC,IAAOa,UAAxB,SAAoCJ,OAEtC,oBAAGV,UAAWC,IAAOY,KAArB,+BAEE,sBAAMb,UAAWC,IAAOa,UAAxB,SAAoCH,IAFtC,W,gBCFWI,EAXG,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OAChB,sBAAKjB,UAAWC,IAAOiB,QAAvB,UACGF,GAAS,oBAAIhB,UAAWC,IAAOe,MAAtB,SAA8BA,IACxC,qBAAKhB,UAAWC,IAAOkB,UAAvB,SAAmCF,QCExBG,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KC6D3BC,MAzDf,WAA4B,IAAD,EACCC,mBAAS,CACjChB,KAAM,EACNC,QAAS,EACTC,IAAK,IAJkB,mBAClBe,EADkB,KACXC,EADW,KAOnBC,EAAcC,OAAOC,KAAKJ,GACxBjB,EAAuBiB,EAAvBjB,KAAMC,EAAiBgB,EAAjBhB,QAASC,EAAQe,EAARf,IASjBoB,EAAqB,WAEzB,IADA,IAAIC,EAAQ,EACZ,MAAkBH,OAAOI,OAAOP,GAAhC,eAAwC,CACtCM,GADY,KAGd,OAAOA,GAQT,OACE,sBAAK9B,UAAWC,IAAOqB,gBAAvB,UACE,cAACU,EAAD,CAAShB,MAAO,wBAAhB,SACE,cAACiB,EAAD,CACErC,gBAxBgB,SAAC,GAA0B,IAAdO,EAAa,EAAvB+B,OAAU/B,KACnCsB,GAAS,SAAAU,GAAS,kCACbA,GADa,kBAEfhC,EAAOgC,EAAUhC,GAAQ,QAsBtBN,QAAS6B,MAGZG,IACC,cAACG,EAAD,CAAShB,MAAO,aAAhB,SACE,cAACoB,EAAD,CACE7B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOmB,IACPlB,mBApB8B,WACtC,IAAMD,EAAQmB,IACd,OAAOnB,EAAQ2B,KAAKC,MAAO/B,EAAOG,EAAS,KAAO,EAkBtB6B,OAIxB,cAACP,EAAD,UACE,cAAC,EAAD,CAAcX,QAAQ,4BChDjBmB,EANH,kBACV,mCACE,cAAC,EAAD,O,MCAJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BpD,EAAOC,QAAU,CAAC,QAAU,0B","file":"static/js/main.fb256f49.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"styles_btn__3ONmq\",\"active\":\"styles_active__NEWtH\"};","import styles from './styles.module.css';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\n\nconst Buttons = ({ onLeaveFeedback, options }) => (\n  <>\n    {options.map(key => (\n      <button\n        key={shortid()}\n        className={styles.btn}\n        name={key}\n        onClick={onLeaveFeedback}\n      >\n        {key}\n      </button>\n    ))}\n  </>\n);\n\nButtons.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default Buttons;\n","import styles from './styles.module.css';\n\nconst Values = ({ good, neutral, bad, total, positivePercentage }) => (\n  <div className={styles.statWrapper}>\n    <p className={styles.stat}>\n      Good: <span className={styles.statValue}>{good}</span>\n    </p>\n    <p className={styles.stat}>\n      Neutral: <span className={styles.statValue}>{neutral}</span>\n    </p>\n    <p className={styles.stat}>\n      Bad: <span className={styles.statValue}>{bad}</span>\n    </p>\n    <p className={styles.stat}>\n      Total:\n      <span className={styles.statValue}>{total}</span>\n    </p>\n    <p className={styles.stat}>\n      Positive Feedback:\n      <span className={styles.statValue}>{positivePercentage}</span>%\n    </p>\n  </div>\n);\n\nexport default Values;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './styles.module.css';\n\nconst Container = ({ title, children }) => (\n  <div className={styles.section}>\n    {title && <h2 className={styles.title}>{title}</h2>}\n    <div className={styles.container}>{children}</div>\n  </div>\n);\n\nContainer.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Container;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => <p>{message}</p>;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { useState } from 'react';\nimport styles from './styles.module.css';\nimport FeedbackOptions from '../FeedbackOptions';\nimport Statistics from '../Statistics';\nimport Section from '../Section';\nimport Notification from '../Notification';\n\nfunction FeedbackCounter() {\n  const [state, setState] = useState({\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  });\n\n  const keysForBtns = Object.keys(state);\n  const { good, neutral, bad } = state;\n\n  const handleIncrement = ({ target: { name } }) => {\n    setState(prevState => ({\n      ...prevState,\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  const countTotalFeedback = () => {\n    let count = 0;\n    for (let value of Object.values(state)) {\n      count += value;\n    }\n    return count;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    const total = countTotalFeedback();\n    return total ? Math.round((good / total) * 100) : 0;\n  };\n\n  return (\n    <div className={styles.FeedbackCounter}>\n      <Section title={'Please leave Feedback'}>\n        <FeedbackOptions\n          onLeaveFeedback={handleIncrement}\n          options={keysForBtns}\n        />\n      </Section>\n      {countTotalFeedback() ? (\n        <Section title={'Statistics'}>\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        </Section>\n      ) : (\n        <Section>\n          <Notification message=\"No feedback given\"></Notification>\n        </Section>\n      )}\n    </div>\n  );\n}\n\nexport default FeedbackCounter;\n","import React from 'react';\nimport FeedbackCounter from './components/FeedbackCounter';\n\nconst App = () => (\n  <>\n    <FeedbackCounter />\n  </>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"modern-normalize/modern-normalize.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"styles_section__1gz5w\"};"],"sourceRoot":""}