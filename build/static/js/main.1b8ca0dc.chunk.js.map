{"version":3,"sources":["components/FeedbackOptions/styles.module.css","components/FeedbackOptions/index.jsx","components/Statistics/index.jsx","components/Section/index.jsx","components/Notification/index.jsx","components/FeedbackCounter/index.jsx","App.jsx","index.js","components/Section/styles.module.css"],"names":["module","exports","Buttons","onLeaveFeedback","options","map","key","className","styles","btn","name","onClick","shortid","Values","good","neutral","bad","total","positivePercentage","statWrapper","stat","statValue","Container","title","children","section","container","Notification","message","FeedbackCounter","state","props","initialGood","initialNeutral","initialBad","handleIncrement","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","keysForBtns","Object","keys","Section","FeedbackOptions","Statistics","Component","defaultProps","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yKACAA,EAAOC,QAAU,CAAC,IAAM,oBAAoB,OAAS,yB,0KCuBtCC,EApBC,SAAC,GAAD,IAAGC,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,QAApB,OACd,mCACGA,EAAQC,KAAI,SAAAC,GAAG,OACd,wBAEEC,UAAWC,IAAOC,IAClBC,KAAMJ,EACNK,QAASR,EAJX,SAMGG,GALIM,a,gBCgBEC,EAtBA,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACb,sBAAKX,UAAWC,IAAOW,YAAvB,UACE,oBAAGZ,UAAWC,IAAOY,KAArB,mBACQ,sBAAMb,UAAWC,IAAOa,UAAxB,SAAoCP,OAE5C,oBAAGP,UAAWC,IAAOY,KAArB,sBACW,sBAAMb,UAAWC,IAAOa,UAAxB,SAAoCN,OAE/C,oBAAGR,UAAWC,IAAOY,KAArB,kBACO,sBAAMb,UAAWC,IAAOa,UAAxB,SAAoCL,OAE3C,oBAAGT,UAAWC,IAAOY,KAArB,mBAEE,sBAAMb,UAAWC,IAAOa,UAAxB,SAAoCJ,OAEtC,oBAAGV,UAAWC,IAAOY,KAArB,+BAEE,sBAAMb,UAAWC,IAAOa,UAAxB,SAAoCH,IAFtC,W,gBCFWI,EAXG,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OAChB,sBAAKjB,UAAWC,IAAOiB,QAAvB,UACGF,GAAS,oBAAIhB,UAAWC,IAAOe,MAAtB,SAA8BA,IACxC,qBAAKhB,UAAWC,IAAOkB,UAAvB,SAAmCF,QCExBG,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KCKpCC,E,4MAaJC,MAAQ,CACNhB,KAAM,EAAKiB,MAAMC,YACjBjB,QAAS,EAAKgB,MAAME,eACpBjB,IAAK,EAAKe,MAAMG,Y,EAGlBC,gBAAkB,YAA2B,IAAdzB,EAAa,EAAvB0B,OAAU1B,KAC7B,EAAK2B,UAAS,SAAAC,GAAS,sBACpB5B,EAAO4B,EAAU5B,GAAQ,O,EAI9B6B,mBAAqB,WAAO,IAAD,EACM,EAAKT,MAEpC,OAHyB,EACjBhB,KADiB,EACXC,QADW,EACFC,K,EAKzBwB,gCAAkC,WAAO,IAC/B1B,EAAS,EAAKgB,MAAdhB,KACFG,EAAQ,EAAKsB,qBACnB,OAAOtB,EAAQwB,KAAKC,MAAO5B,EAAOG,EAAS,KAAO,G,4CAGpD,WACE,IAAMA,EAAQ0B,KAAKJ,qBACbrB,EAAqByB,KAAKH,kCAC1BrC,EAAkBwC,KAAKR,gBAHtB,EAIwBQ,KAAKb,MAA5BhB,EAJD,EAICA,KAAME,EAJP,EAIOA,IAAKD,EAJZ,EAIYA,QAEb6B,EAAcC,OAAOC,KAAKH,KAAKb,OAErC,OACE,sBAAKvB,UAAWC,IAAOqB,gBAAvB,UACE,cAACkB,EAAD,CAASxB,MAAO,wBAAhB,SACE,cAACyB,EAAD,CACE7C,gBAAiBA,EACjBC,QAASwC,MAIZ3B,EACC,cAAC8B,EAAD,CAASxB,MAAO,aAAhB,SACE,cAAC0B,EAAD,CACEnC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,MAIxB,cAAC6B,EAAD,UACE,cAAC,EAAD,CAAcnB,QAAQ,+B,GAlEJsB,aAAxBrB,EACGsB,aAAe,CACpBnB,YAAa,EACbC,eAAgB,EAChBC,WAAY,GAsEDL,QCzEAuB,EANH,kBACV,mCACE,cAAC,EAAD,O,MCAJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BzD,EAAOC,QAAU,CAAC,QAAU,2B","file":"static/js/main.1b8ca0dc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"styles_btn__3ONmq\",\"active\":\"styles_active__NEWtH\"};","import styles from './styles.module.css';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\n\nconst Buttons = ({ onLeaveFeedback, options }) => (\n  <>\n    {options.map(key => (\n      <button\n        key={shortid()}\n        className={styles.btn}\n        name={key}\n        onClick={onLeaveFeedback}\n      >\n        {key}\n      </button>\n    ))}\n  </>\n);\n\nButtons.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default Buttons;\n","import styles from './styles.module.css';\n\nconst Values = ({ good, neutral, bad, total, positivePercentage }) => (\n  <div className={styles.statWrapper}>\n    <p className={styles.stat}>\n      Good: <span className={styles.statValue}>{good}</span>\n    </p>\n    <p className={styles.stat}>\n      Neutral: <span className={styles.statValue}>{neutral}</span>\n    </p>\n    <p className={styles.stat}>\n      Bad: <span className={styles.statValue}>{bad}</span>\n    </p>\n    <p className={styles.stat}>\n      total:\n      <span className={styles.statValue}>{total}</span>\n    </p>\n    <p className={styles.stat}>\n      Positive Feedback:\n      <span className={styles.statValue}>{positivePercentage}</span>%\n    </p>\n  </div>\n);\n\nexport default Values;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './styles.module.css';\n\nconst Container = ({ title, children }) => (\n  <div className={styles.section}>\n    {title && <h2 className={styles.title}>{title}</h2>}\n    <div className={styles.container}>{children}</div>\n  </div>\n);\n\nContainer.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Container;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => <p>{message}</p>;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './styles.module.css';\nimport FeedbackOptions from '../FeedbackOptions';\nimport Statistics from '../Statistics';\nimport Section from '../Section';\nimport Notification from '../Notification';\n\nclass FeedbackCounter extends Component {\n  static defaultProps = {\n    initialGood: 0,\n    initialNeutral: 0,\n    initialBad: 0,\n  };\n\n  static propTypes = {\n    initialGood: PropTypes.number,\n    initialNeutral: PropTypes.number,\n    initialBad: PropTypes.number,\n  };\n\n  state = {\n    good: this.props.initialGood,\n    neutral: this.props.initialNeutral,\n    bad: this.props.initialBad,\n  };\n\n  handleIncrement = ({ target: { name } }) => {\n    this.setState(prevState => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    const total = good + neutral + bad;\n    return total;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const total = this.countTotalFeedback();\n    return total ? Math.round((good / total) * 100) : 0;\n  };\n\n  render() {\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n    const onLeaveFeedback = this.handleIncrement;\n    const { good, bad, neutral } = this.state;\n\n    const keysForBtns = Object.keys(this.state);\n\n    return (\n      <div className={styles.FeedbackCounter}>\n        <Section title={'Please leave Feedback'}>\n          <FeedbackOptions\n            onLeaveFeedback={onLeaveFeedback}\n            options={keysForBtns}\n          />\n        </Section>\n\n        {total ? (\n          <Section title={'Statistics'}>\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          </Section>\n        ) : (\n          <Section>\n            <Notification message=\"No feedback given\"></Notification>\n          </Section>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default FeedbackCounter;\n","import React from 'react';\nimport FeedbackCounter from './components/FeedbackCounter';\n\nconst App = () => (\n  <>\n    <FeedbackCounter />\n  </>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"modern-normalize/modern-normalize.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"styles_section__1gz5w\"};"],"sourceRoot":""}